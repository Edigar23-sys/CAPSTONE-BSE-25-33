name: Run Tests

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: manager_timesheets
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: '--health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2  # Use setup-php action
        with:
          php-version: 8.2  # Specify PHP 8.2
          extensions: mbstring, xml, pdo, mysql

      - name: Set environment variables
        run: |
          echo "APP_ENV=testing" >> .env
          echo "APP_KEY=base64:XYzqBnlzNzrKtagh9OOSKoAVzgMDE6PlJB25K7vdXMs=" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env  # Use 'mysql' for GitHub Actions
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=manager_timesheets" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-progress

      - name: Generate application key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run Laravel tests
        run: php artisan test

      - name: Install NPM dependencies
        run: npm ci

      - name: Run Vue tests
        run: npm test
    
      - name: Lint code
        run: npm run lint

      - name: Install PHP_CodeSniffer
        run: composer require --dev squizlabs/php_codesniffer

      - name: Run PHP_CodeBeautifier (phpcbf)
        run: vendor/bin/phpcbf --standard=PSR12 app/ tests/
        continue-on-error: true

      - name: Run PHP_CodeSniffer (phpcs)
        run: vendor/bin/phpcs --standard=PSR12 app/ tests/
        continue-on-error: true






# name: Run Tests

# on:
  
#   push:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: windows-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Install dependencies
#         run: npm ci


#       - name: Run tests
#         run: npm test
    
#       - name: Lint code
#         run: npm run lint

    
